# Strip footing (B1 => x-axis)


## Load combinations

```{julia}
uls_cases = vcat(101:199) #uls cases
permissible_cases = vcat(201:204) # PERMISSIBLE cases

# excel file output from SG model reactions
filename = "\\xlsx\\reactions.xlsx"
current_dir = dirname(@__FILE__)
filepathname = current_dir * filename;
```

## Standard pedestal, SQ460

```{julia}
b = 460mm
D = b
db = 16mm
Ab = π / 4 * db^2
n_all_around = 4

dtie = 10mm # assume 2 ties only
Asv_per_tiespacing = 2 * π / 4 * dtie^2 / 300mm |> mm^2 / mm

d = D - 50mm - 1.5 * db - dtie
fc = 32MPa
fy = 500MPa
rc_sq500 = AS3600RectSection(n_all_around, Ab, b, d, D, fc, fy, Asv_per_tiespacing)
```

```{julia}
#| echo: false
#| output: false
rc_sq500.concrete_section.plot_section(filename="images/sq500.png");
```

![](images/sq500.png)


## Reinforced 300 slab, N16-200; moment capacity

```{julia}
D = 300mm
γc = 24.0kN / m^3;
db = 16mm;
Ast = π / 4 * db^2;
# cover to centre of rebar
cc = 50mm + 1.5 * db;
d = D - cc;
# shear ties
Asv_per_tiespacing = 0.0mm;

# define slab, per bar spacing
rc_slab = AS3600RectSection(fc=fc, fy=fy, b=1m, d=d, D=D, nbb=5, Abb=Ast);
```

```{julia}
#| echo: false
rc_slab.concrete_section.plot_section(filename="images/rc_slab.png");
```

![](images/rc_slab.png){width="300"}

```{julia}
Mdes_rc_slab, str_o = fdesign_beam_moment(rc_slab)
println(str_o)
```


### Foundation parameters

```{julia}  
sp = 0.7m
ae = 0.9m
B1 = sp + 2 * ae
B2 = 1.0m

D = rc_slab.D
Df = 1.0m # depth to footing underside
hs = Df - D # height of soil overburden 
hp = Df - D + 300mm # height of pedestal

# pedestal location 
e11 = -B1 / 2 + ae
e12 = e11 + sp

ped11 = RectanglePedestal(rc_sq500, hp, e11; nodenum=1)
ped12 = RectanglePedestal(rc_sq500, hp, e12; nodenum=5)

slab = FootingSlab(B1, B2, rc_slab);
vped = [ped11, ped12]
raft = RaftFootingRect(vped, slab, Df)
fg=plot_footing_geom(raft)
plot!(fg, aspect_ratio=:equal )
# plot(getFootingGeomVectors(raft), label="", aspect_ratio=:equal, size=(500, 500 / 1.6))
```

```{julia}
#| echo: false
#| output: false
struct_to_dict(raft)
```


## Soil parameters

```{julia}
# allowable bearing
q_all = 100kPa
# WEIGHT OF SOIL
γs = 18.0kN / m^3;

ϕn = 1.0
ϕd = 0.9
ϕuϕ = 0.85
ϕsoilbase = 30.0°;
ϕfill = 30°;

backfill = Soil_AS4678(γs, ϕfill, ϕn, ϕd, ϕuϕ);
foundation = Soil_AS4678(γs, ϕsoilbase, ϕn, ϕd, ϕuϕ);
```


## ULS bearing pressure

```{julia}
pqx11, pqx22, calcdetails_qmax = check_bearing_pressure(filepathname, raft, backfill, uls_cases,
    isZup=true,
    ψG=0.9,
    isFrustumVol=true);
pqx11
```

```{julia}
pqx22
```

```{julia}
println(calcdetails_qmax)
```

## SLS bearing pressure

```{julia}
pqx11, pqx22, calcdetails_qmax = check_bearing_pressure(filepathname, raft, backfill, permissible_cases,
    isZup=true,
    ψG=0.9,
    isFrustumVol=false);
pqx11
```

```{julia}
pqx22
```

```{julia}
println(calcdetails_qmax)
```

## ULS sliding check

```{julia}
str_out = check_sliding(filepathname, raft, backfill, foundation, uls_cases, isZup=true,
    isAdhesion=false,
    Gext=0.0kN,
    withPassive=true,
    isFrustumVol=true);
println(str_out)
```

## moment diagram

```{julia}
p11, p22, stro = check_bending_diagram_raft(filepathname, raft, backfill, uls_cases,
    ; isZup=true,
     ψG=1.2,
    isIgnoreMinAst=true,
    isFrustumVol=true)
p22
```

```{julia}
p11
```

```{julia} 
display(println(stro))
```

## Shear Diagram

```{julia}
plot_v = check_shear_diagram(raft, backfill, uls_cases,
    ; filePathName=filepathname,
    isZup=true,
     ψG=1.2,
    isFrustumVol=false)
```

## Punching Shear

```{julia}
str_o = check_punching(raft, uls_cases, ; isZup=true, filepathname=filepathname)
println(str_o)
```


## Pedestal beam shear

```{julia}
str = check_pedestal_shear(filepathname, raft, uls_cases, ; isZup=true)
println(str)
```